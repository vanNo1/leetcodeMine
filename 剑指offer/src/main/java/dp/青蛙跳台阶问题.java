package dp;

/**
 * 一只青蛙一次可以跳上1级台阶，也可以跳上2级台阶。求该青蛙跳上一个 n 级的台阶总共有多少种跳法。
 *
 * 答案需要取模 1e9+7（1000000007），如计算初始结果为：1000000008，请返回 1。
 *
 * 示例 1：
 *
 * 输入：n = 2
 * 输出：2
 * 示例 2：
 *
 * 输入：n = 7
 * 输出：21
 * 示例 3：
 *
 * 输入：n = 0
 * 输出：1
 *
 * 来源：力扣（LeetCode）
 * 链接：https://leetcode-cn.com/problems/qing-wa-tiao-tai-jie-wen-ti-lcof
 * 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
 *
 * 1。这道题用普通的递归会超出时间
 * 2。于是这里用dp，dp含义：有i个台阶时，青蛙有dp[i]种跳法
 * 3。但是这里要注意：有整形溢出：在计算出来之后，装入int之前，这个数字是可以被操作的，但一旦装入int，就会溢出
 *
 */
public class 青蛙跳台阶问题 {
    public static int numWays(int n) {
        int[] dp = new int[n + 1];
        if (n == 0 || n == 1) {
            return 1;
        }
        dp[0] = 1;
        dp[1] = 1;

        for (int i = 2; i <= n; i++) {
            //dp[i - 1] + dp[i - 2] 计算的结果是保留的所以在这里进行取膜，但一旦装入int就会溢出
            dp[i] = (dp[i - 1] + dp[i - 2]) % 1000000007;
        }
        return dp[n];
    }
}
